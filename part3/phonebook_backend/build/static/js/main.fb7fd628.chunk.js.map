{"version":3,"sources":["services/persons.js","components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","Filter","filterText","onChange","value","PersonForm","props","onSubmit","addPerson","newName","handleNameChange","newNumber","handleNumberChange","type","Persons","persons","deletePerson","map","person","key","name","number","onClick","Notification","notification","className","message","App","useState","setPersons","setNewName","setNewNumber","filterString","setFilterString","setNotification","useEffect","personServices","initialState","notifyWith","setTimeout","personsToShow","length","filter","p","toLowerCase","indexOf","event","target","preventDefault","existing","find","window","confirm","returnedPerson","addedPerson","concat","catch","error","console","log","toDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fb7fd628.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, remove, update }","import React from 'react';\n\nconst Filter = ({ filterText, onChange }) => {\n  return (\n    <div>\n      filter shown with <input value={filterText} onChange={onChange} />\n    </div>\n  )\n}\n\nexport default Filter","import React from 'react';\n\nconst PersonForm = (props) => {\n  return (\n    <form onSubmit={props.addPerson}>\n      <div>\n        name: <input value={props.newName} onChange={props.handleNameChange} />\n      </div>\n      <div>\n        number: <input value={props.newNumber} onChange={props.handleNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm","import React from 'react';\n\nconst Persons = ({ persons, deletePerson }) => {\n  return (\n    persons.map(person =>\n      <div key={person.id}>\n        {person.name} {person.number}\n        <button onClick={() => deletePerson(person.id)}>delete</button>\n      </div>\n    )\n  )\n}\n\nexport default Persons","import React from 'react'\n\nconst Notification = ({ notification }) => {\n  if (notification === null) {\n    return null\n  }\n  \n  return (\n    <div className={notification.type}>\n      {notification.message}\n    </div>\n  )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react';\nimport personServices from './services/persons'\n\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filterString, setFilterString ] = useState('')\n  const [ notification, setNotification ] = useState(null)\n\n  useEffect(() => {\n    personServices\n      .getAll()\n      .then(initialState => {\n        setPersons(initialState)\n      })\n  }, [])\n\n  const notifyWith = (message, type='success') => {\n    setNotification({message, type})\n    setTimeout(() => {\n      setNotification(null)\n    }, 5000)\n  }\n  \n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFiltereChange = (event) => {\n    setFilterString(event.target.value)\n  }\n\n  const deletePerson = (id) => {\n    const toDelete = persons.find(p => p.id === id)\n    const ok = window.confirm(`Delete ${toDelete.name} ?`)\n    \n    if (ok) {\n      personServices\n        .remove(id)\n        .then(response => {\n          setPersons(persons.filter(p => p.id !== id))\n          notifyWith(`Deleted ${toDelete.name}`)\n        })\n        .catch(error => {\n          setPersons(persons.filter(p => p.id !== id))\n          notifyWith(`${toDelete.name} has already been removed`, 'error')\n        })\n    }\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    const existing = persons.find(p => p.name === newName)\n    if (existing) {\n      const ok = window.confirm(`${existing.name} already in phonebook, replace the old number with new one?`)\n      if (ok) {\n        personServices\n          .update(existing.id, {\n            name: existing.name,\n            number: newNumber\n          })\n          .then(returnedPerson => {\n            setPersons(persons.map(person => person.id !== existing.id ? person : returnedPerson))\n            notifyWith(`Changed number of ${existing.name}`)\n            setNewName('')\n            setNewNumber('')\n          })\n      }\n    } else {\n      personServices\n        .create({\n          name: newName,\n          number: newNumber\n        })\n        .then(addedPerson => {\n          setPersons(persons.concat(addedPerson))\n          notifyWith(`Added ${newName}`)\n          setNewName('')\n          setNewNumber('')\n        })\n        .catch(error => {\n          console.log(error.response.data.error)\n          notifyWith(`${error.response.data.error}`, 'error')\n        })\n    }\n  }\n\n  const personsToShow = filterString.length === 0 ? \n                          persons :\n                          persons.filter(p => p.name.toLowerCase().indexOf(filterString.toLowerCase()) > -1 )\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={notification} />\n\n      <Filter filterText={filterString} onChange={handleFiltereChange} />\n\n      <h3>add a new</h3>\n      <PersonForm \n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        newNumber={newNumber}\n        newName={newName}\n        addPerson={addPerson}\n      />\n      \n      <h3>Numbers</h3>\n      <Persons persons={personsToShow} deletePerson={deletePerson} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}